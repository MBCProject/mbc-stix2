{
    "type": "bundle",
    "id": "bundle--6f2be979-a2e8-4176-9f1e-2efb907bf979",
    "objects": [
        {
            "type": "attack-pattern",
            "spec_version": "2.1",
            "id": "attack-pattern--0985829f-204f-4760-8ece-ff0f3031a715",
            "created_by_ref": "identity--b73c59c1-8560-449a-b8d0-c2ce0533c5bf",
            "created": "2020-08-21T20:49:59.484262Z",
            "modified": "2022-09-08T18:26:13.297178Z",
            "name": "Injected DLL Testing",
            "description": "Testing for the name of a particular DLL that is known to be injected by a sandbox for API hooking is a common way of detecting sandbox environments. This can be achieved through the kernel32!GetModuleHandle API call and other means.",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-mbc",
                    "phase_name": "anti-behavioral-analysis"
                }
            ],
            "external_references": [
                {
                    "source_name": "mitre-mbc",
                    "url": "https://github.com/MBCProject/mbc-markdown/blob/v2.3/anti-behavioral-analysis/sandbox-detection.md",
                    "external_id": "B0007.004"
                }
            ],
            "object_marking_refs": [
                "marking-definition--093b6375-cd45-4aa3-8f91-6a03ddd7a3d3"
            ],
            "x_mitre_is_subtechnique": true
        }
    ]
}