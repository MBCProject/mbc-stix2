{
    "type": "bundle",
    "id": "bundle--0b57fd03-cceb-4f4d-bd17-5edd57c6225e",
    "objects": [
        {
            "type": "malware-behavior",
            "spec_version": "2.1",
            "id": "malware-behavior--6862374a-93f5-455c-bc0c-2a3903e8bc08",
            "created_by_ref": "identity--b73c59c1-8560-449a-b8d0-c2ce0533c5bf",
            "created": "2019-08-01T00:00:00.000Z",
            "modified": "2023-09-19T00:00:00.000Z",
            "name": "Conditional Execution",
            "obj_defn": {
                "description": "Malware checks system environment conditions or characteristics to determine its execution path. For example, malware may not run or may be dormant unless system conditions are favorable, or a file that is dropped may vary its behavior according to the execution environment. Conditional execution in malware happens autonomously, not because of an attacker's command. Such execution is realized when control flow of the malicious program changes with branching instructions in the code, e.g., conditional/unconditional jumps or \u2018if\u2019 statements.\n\nThis behavior is related to the **Dynamic Analysis Evasion ([B0003](https://github.com/MBCProject/mbc-markdown/blob/main/anti-behavioral-analysis/dynamic-analysis-evasion.md))** behavior that obstructs dynamic analysis in a sandbox, emulator, or virtual machine.\n\nSome aspects of this Conditional Execution behavior are related to the [Execution Guardrails (T1480)](https://attack.mitre.org/techniques/T1480) ATT&CK technique; however, the ATT&CK technique is not focused on anti-behavioral analysis behaviors.",
                "external_id": "B0025",
                "source_name": "mitre-mbc",
                "url": "https://github.com/MBCProject/mbc-markdown/blob/main/execution/conditional-execution.md"
            },
            "tags": {
                "Anti-Analysis-Type": "Evasion"
            },
            "objective_refs": [
                "malware-objective--3336569b-d163-4a42-9b05-9eff0c7ac6d2",
                "malware-objective--f38b4e5f-7c1b-4c17-9610-a739550ab918",
                "malware-objective--debfe6b5-b30d-429f-aa74-b416af866f7b"
            ],
            "detection_rules": [
                {
                    "api_fncs": [
                        "RegisterServiceCtrlHandler",
                        "RegisterServiceCtrlHandlerEx",
                        "StartServiceCtrlDispatcher",
                        "System.ServiceProcess.ServiceBase::Run"
                    ],
                    "detect_ref": "malware-method--efce34e7-bac1-4d20-bac8-491a9169df4d",
                    "rule_name": "run as service",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/host-interaction/service/run-as-service.yml"
                }
            ],
            "obj_version": "3.0",
            "related_object_refs": [
                "attack-pattern--853c4192-4311-43e1-bfbb-b11b14911852"
            ],
            "external_references": [
                {
                    "source_name": "mcafee-webcobra",
                    "description": "\"WebCobra Malware Uses Victims' Computers to Mine Cryptocurrency,\" McAfee, blog, Nov. 12, 2018 [Online].",
                    "url": "https://www.mcafee.com/blogs/other-blogs/mcafee-labs/webcobra-malware-uses-victims-computers-to-mine-cryptocurrency/"
                },
                {
                    "source_name": "rcketcalf",
                    "description": "RcketCalf, \"Debugging malware that will only run as a service,\" Stack Exchange, May 7, 2013 [Online].",
                    "url": "https://reverseengineering.stackexchange.com/questions/2019/debugging-malware-that-will-only-run-as-a-service"
                },
                {
                    "source_name": "proofpoint-ursnif",
                    "description": "\"Ursnif Banking Trojan Campaign Ups the Ante with New Sandbox Evasion Techniques,\" Proofpoint, Sep. 20, 2016 [Online].",
                    "url": "https://www.proofpoint.com/us/threat-insight/post/ursnif-banking-trojan-campaign-sandbox-evasion-techniques"
                },
                {
                    "source_name": "webroot-mebromi",
                    "description": "\"Mebromi: the first BIOS rootkit in the wild,\" Webroot, blog, Sep. 13, 2011 [Online].",
                    "url": "https://www.webroot.com/blog/2011/09/13/mebromi-the-first-bios-rootkit-in-the-wild/"
                },
                {
                    "source_name": "porras",
                    "description": "P. Porras, H. Saidi, V. Yegneswaran, \"An Analysis of Conficker's Logic and Redenzvous Points,\" SRI International, Mar. 19, 2009 [Online].",
                    "url": "http://www.csl.sri.com/users/vinod/papers/Conficker/"
                },
                {
                    "source_name": "falliere-stuxnet",
                    "description": "N. Falliere, L. Murchu, and E. Chien, \"W32.Stuxnet Dossier,\" Symantec Security Response, Feb. 2011 [Online].",
                    "url": "https://docs.broadcom.com/doc/security-response-w32-stuxnet-dossier-11-en"
                },
                {
                    "source_name": "capa analysis",
                    "description": "Analysis output, capa 4.0, analyzed at MITRE on Oct. 12, 2022.",
                    "url": "https://github.com/mandiant/capa-rules"
                },
                {
                    "source_name": "wikipedia-conficker",
                    "description": "\"Conficker,\" Wikipedia [Online].",
                    "url": "https://en.wikipedia.org/wiki/Conficker"
                }
            ],
            "object_marking_refs": [
                "marking-definition--093b6375-cd45-4aa3-8f91-6a03ddd7a3d3"
            ],
            "extensions": {
                "extension-definition--d57b7c9c-7fa6-436b-b82c-8e6f69cdc3d0": {
                    "extension_type": "new-sdo"
                }
            }
        }
    ]
}