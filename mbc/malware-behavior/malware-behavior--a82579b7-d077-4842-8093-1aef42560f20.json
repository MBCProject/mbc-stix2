{
    "type": "bundle",
    "id": "bundle--0946b4f7-b835-40a4-a973-707832f878b5",
    "objects": [
        {
            "type": "malware-behavior",
            "spec_version": "2.1",
            "id": "malware-behavior--a82579b7-d077-4842-8093-1aef42560f20",
            "created_by_ref": "identity--b73c59c1-8560-449a-b8d0-c2ce0533c5bf",
            "created": "2019-08-01T00:00:00.000Z",
            "modified": "2023-09-13T00:00:00.000Z",
            "name": "Obfuscated Files or Information",
            "obj_defn": {
                "description": "Malware may make files or information difficult to discover or analyze by encoding, encrypting, or otherwise obfuscating the content. In addition, a malware sample itself can be encoded or encrypted (i.e., encoding/encryption is a code characteristic).\n\nA related MBC behavior (code characteristic), associated explicitly with executable code and making its analysis more difficult, is **Executable Code Obfuscation ([B0032](https://github.com/MBCProject/mbc-markdown/blob/main/anti-static-analysis/executable-code-obfuscation.md))**.\n\nAnother related MBC behavior (code characteristic), is **Software Packing ([F0001](https://github.com/MBCProject/mbc-markdown/blob/main/anti-static-analysis/software-packing.md))** which has methods capturing specific packers and types of compression.\n\nSee ATT&CK: **Obfuscated Files or Information ([T1027](https://attack.mitre.org/techniques/T1027/), [T1406](https://attack.mitre.org/techniques/T1406/))**.\n\nInstead of being listed alphabetically, methods have been grouped to better faciliate labeling and mapping.",
                "external_id": "E1027",
                "source_name": "mitre-mbc",
                "url": "https://github.com/MBCProject/mbc-markdown/blob/main/anti-static-analysis/obfuscated-files-or-information.md"
            },
            "tags": {
                "Anti-Analysis-Type": "Evasion"
            },
            "objective_refs": [
                "malware-objective--46f7c0d5-2fed-4daf-884f-fa7fd63e571b",
                "malware-objective--debfe6b5-b30d-429f-aa74-b416af866f7b"
            ],
            "detection_rules": [
                {
                    "api_fncs": [
                        "memfrob"
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using memfrob from glibc",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/encrypt-data-using-memfrob-from-glibc.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using XXTEA",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/xxtea/encrypt-data-using-xxtea.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using HC-128",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/hc-128/encrypt-data-using-hc-128.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using HC-128 via WolfSSL",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/hc-128/encrypt-data-using-hc-128-via-wolfssl.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using RC6",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/rc6/encrypt-data-using-rc6.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using twofish",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/twofish/encrypt-data-using-twofish.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using AES MixColumns step",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/aes/encrypt-data-using-aes-mixcolumns-step.yml"
                },
                {
                    "api_fncs": [
                        "CryptGenKey",
                        "CryptDeriveKey",
                        "CryptImportKey",
                        "CryptAcquireContext",
                        "CryptEncrypt",
                        "CryptDecrypt"
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using AES via WinAPI",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/aes/encrypt-data-using-aes-via-winapi.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using AES via .NET",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/aes/encrypt-data-using-aes-via-dotnet.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "manually build AES constants",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/aes/manually-build-aes-constants.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using Sosemanuk",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/sosemanuk/encrypt-data-using-sosemanuk.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using XTEA",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/xtea/encrypt-data-using-xtea.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using Camellia",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/camellia/encrypt-data-using-camellia.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using vest",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/vest/encrypt-data-using-vest.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using DES",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/des/encrypt-data-using-des.yml"
                },
                {
                    "api_fncs": [
                        "CryptGenKey",
                        "CryptDeriveKey",
                        "CryptImportKey",
                        "CryptAcquireContext",
                        "CryptEncrypt",
                        "CryptDecrypt"
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using DES via WinAPI",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/des/encrypt-data-using-des-via-winapi.yml"
                },
                {
                    "api_fncs": [
                        "CryptImportKey",
                        "CryptAcquireContext",
                        "CryptEncrypt"
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using RC4 with custom key via WinAPI",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/rc4/encrypt-data-using-rc4-with-custom-key-via-winapi.yml"
                },
                {
                    "api_fncs": [
                        "CryptGenKey",
                        "CryptDeriveKey",
                        "CryptImportKey",
                        "CryptAcquireContext",
                        "CryptEncrypt",
                        "CryptDecrypt"
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using RC4 via WinAPI",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/rc4/encrypt-data-using-rc4-via-winapi.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using skipjack",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/skipjack/encrypt-data-using-skipjack.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using blowfish",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/blowfish/encrypt-data-using-blowfish.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "decrypt data using TEA",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/tea/decrypt-data-using-tea.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encrypt data using TEA",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/tea/encrypt-data-using-tea.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encode data using XOR",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encoding/xor/encode-data-using-xor.yml"
                },
                {
                    "api_fncs": [
                        "System.Convert::ToBase64String",
                        "System.Convert::ToBase64CharArray",
                        "System.Convert::TryToBase64Chars"
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "encode data using Base64",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encoding/base64/encode-data-using-base64.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-method--58c152da-1826-4208-ad98-c33cde3c9090",
                    "rule_name": "decode data using Base64 via dword translation table",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encoding/base64/decode-data-using-base64-via-dword-translation-table.yml"
                },
                {
                    "api_fncs": [
                        " "
                    ],
                    "detect_ref": "malware-behavior--a82579b7-d077-4842-8093-1aef42560f20",
                    "rule_name": "resolve function by Brute Ratel Badger hash",
                    "rule_type": "capa",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/linking/runtime-linking/resolve-function-by-brute-ratel-badger-hash.yml"
                }
            ],
            "obj_version": "2.0",
            "related_object_refs": [
                "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
                "attack-pattern--d13fa042-8f26-44e1-a2a8-af0bf8e2ac9a"
            ],
            "external_references": [
                {
                    "source_name": "hromcov\u00e1",
                    "description": "Z. Hromcov\u00e1, \"Malicious campaign targets South Korean users with backdoor\u2011laced torrents,\" We Live Security, ESET, Jul. 8, 2019 [Online].",
                    "url": "https://www.welivesecurity.com/2019/07/08/south-korean-users-backdoor-torrents/"
                },
                {
                    "source_name": "bleeping-kovter",
                    "description": "\"How to remove the Kovter Trojan (Removal Guide),\" Bleeping Computer, Mar. 23, 2016 [Online].",
                    "url": "https://www.bleepingcomputer.com/virus-removal/remove-kovter-trojan"
                },
                {
                    "source_name": "victor-netwalker",
                    "description": "K. Victor, \"Reflective Loading Runs Netwalker Fileless Ransomware,\" Trend Micro, May 18, 2020 [Online].",
                    "url": "https://www.trendmicro.com/en_us/research/20/e/netwalker-fileless-ransomware-injected-via-reflective-loading.html"
                },
                {
                    "source_name": "cisa-ar21-039b",
                    "description": "\"MAR-10320115-1.v1 - TEARDROP,\" CISA, Cybersecurity Advisories, Alert Code AR21-039B, Apr. 15, 2021 [Online].",
                    "url": "https://www.cisa.gov/uscert/ncas/analysis-reports/ar21-039b"
                },
                {
                    "source_name": "falliere-stuxnet",
                    "description": "N. Falliere, L. Murchu, and E. Chien, \"W32.Stuxnet Dossier,\" Symantec Security Response, Feb. 2011 [Online].",
                    "url": "https://docs.broadcom.com/doc/security-response-w32-stuxnet-dossier-11-en"
                },
                {
                    "source_name": "proofpoint-dreambot",
                    "description": "\"Nightmare on Tor Street: Ursnif variant Dreambot adds Tor functionality,\" proofpoint, Aug. 25, 2016 [Online].",
                    "url": "https://www.proofpoint.com/us/threat-insight/post/ursnif-variant-dreambot-adds-tor-functionality"
                },
                {
                    "source_name": "mcafee-webcobra",
                    "description": "\"WebCobra Malware Uses Victims' Computers to Mine Cryptocurrency,\" McAfee, blog, Nov. 12, 2018 [Online].",
                    "url": "https://www.mcafee.com/blogs/other-blogs/mcafee-labs/webcobra-malware-uses-victims-computers-to-mine-cryptocurrency/"
                },
                {
                    "source_name": "fireeye-poisonivy",
                    "description": "\"Poison Ivy: Assessing Damange and Extracting Intelligence,\" FireEye, Special Report, 2014 [Online].",
                    "url": "https://www.mandiant.com/sites/default/files/2021-09/rpt-poison-ivy.pdf"
                },
                {
                    "source_name": "capa analysis",
                    "description": "Analysis output, capa 4.0, analyzed at MITRE on Oct. 12, 2022.",
                    "url": "https://github.com/mandiant/capa-rules"
                },
                {
                    "source_name": "ventura-samsam",
                    "description": "V. Ventura, \"SamSam - The Evolution Continues Netting Over $325,000 in 4 Weeks,\" Talos, blog, Jan. 22, 2018 [Online].",
                    "url": "https://blog.talosintelligence.com/2018/01/samsam-evolution-continues-netting-over.html"
                }
            ],
            "object_marking_refs": [
                "marking-definition--093b6375-cd45-4aa3-8f91-6a03ddd7a3d3"
            ],
            "extensions": {
                "extension-definition--d57b7c9c-7fa6-436b-b82c-8e6f69cdc3d0": {
                    "extension_type": "new-sdo"
                }
            }
        }
    ]
}