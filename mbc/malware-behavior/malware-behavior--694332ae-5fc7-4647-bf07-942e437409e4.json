{
    "type": "bundle",
    "id": "bundle--405ab8d3-f5af-4996-9012-912aeed3def9",
    "objects": [
        {
            "type": "malware-behavior",
            "spec_version": "2.1",
            "id": "malware-behavior--694332ae-5fc7-4647-bf07-942e437409e4",
            "created_by_ref": "identity--b73c59c1-8560-449a-b8d0-c2ce0533c5bf",
            "created": "2019-08-01T00:00:00.000Z",
            "modified": "2022-11-10T00:00:00.000Z",
            "name": "Executable Code Optimization",
            "obj_defn": {
                "description": "Code is optimized, making it harder to statically analyze.",
                "external_id": "B0034",
                "source_name": "mitre-mbc",
                "url": "https://github.com/MBCProject/mbc-markdown/blob/main/anti-static-analysis/executable-code-optimization.md"
            },
            "tags": {
                "Anti-Analysis-Type": "Evasion"
            },
            "objective_refs": [
                "malware-objective--46f7c0d5-2fed-4daf-884f-fa7fd63e571b"
            ],
            "obj_version": "2.0",
            "external_references": [
                {
                    "source_name": "ming",
                    "description": "Jiang Ming et al, \"Towards Paving the Way for Large-Scale Windows Malware Analysis: Generic Binary Unpacking with Orders-of-Magnitude Performance Boost,\" October 2018 [Online].",
                    "url": "https://dl.acm.org/citation.cfm?id=3243771"
                }
            ],
            "object_marking_refs": [
                "marking-definition--093b6375-cd45-4aa3-8f91-6a03ddd7a3d3"
            ],
            "extensions": {
                "extension-definition--d57b7c9c-7fa6-436b-b82c-8e6f69cdc3d0": {
                    "extension_type": "new-sdo"
                }
            }
        }
    ]
}